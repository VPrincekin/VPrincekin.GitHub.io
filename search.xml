<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>亲手搭建一个自己的博客</title>
    <url>/2020/11/20/%E4%BA%B2%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h3 id="1-购买、绑定独立域名"><a href="#1-购买、绑定独立域名" class="headerlink" title="1. 购买、绑定独立域名"></a>1. 购买、绑定独立域名</h3><p>搭建一个属于自己的博客，首先我们需要拥有一个自己的域名。购买域名的途径有很多，这里推荐一个 <a href="http://www.godaddy.com/">Godaddy</a> 具体如何购买，自行选择即可。</p>
<p>在购买完域名之后，我们还需要做一次域名解析。这里为了防止被墙掉。我们选择 <a href="https://www.dnspod.cn/">DNSPod</a> 的服务, 好用且免费。 在我们注册完之后执行以下步骤：</p>
<ul>
<li>首先添加域名记录，在 DNSPod 添加上自己的域名。<br><img src="/2020/11/20/%E4%BA%B2%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/%E6%B7%BB%E5%8A%A0%E5%9F%9F%E5%90%8D.png" alt="image"></li>
<li>在 DNSPod 自己的域名下添加一条 A 记录，地址就是 Github Pages 的服务 IP 地址: 192.30.252.153. <a href="https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site">github page 服务地址查询</a><br><img src="/2020/11/20/%E4%BA%B2%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/A%E8%AE%B0%E5%BD%95.png" alt="image"></li>
<li>在域名注册商处修改DNS服务:去Godaddy修改Nameservers为这两个地址：f1g1ns1.dnspod.net、f1g1ns2.dnspod.net。<br><img src="/2020/11/20/%E4%BA%B2%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/dns%E7%AE%A1%E7%90%86.jpeg" alt="image"><br><img src="/2020/11/20/%E4%BA%B2%E6%89%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/%E4%BF%AE%E6%94%B9dns.jpeg" alt="image"></li>
</ul>
<p>至此，域名的配置就完成了！</p>
<h3 id="2-使用-Github-Pages-建立博客"><a href="#2-使用-Github-Pages-建立博客" class="headerlink" title="2. 使用 Github Pages 建立博客"></a>2. 使用 Github Pages 建立博客</h3><p>我们需要使用 github 建立一个自己的博客，以 username.github.io 命名。这个命名方式是固定的，username 可以使用你自己的账户名代替。每个用户名下面只能建立一个。</p>
<p>创建好 username.github.io 项目之后， 提交一个 index.html 文件， 然后 push 到 master 分支，第一次页面生效需要一些时间，大概 10 分钟左右。</p>
<p>接下来，如果我们想让 username.github.io 能通过你自己的域名来访问，需要在项目的根目录下新建一个名为CNAME的文件，文件内容形如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">betago.online</span><br></pre></td></tr></table></figure>
<p>设置成功后，根据DNS的情况，最长可能需要一天才能生效，耐心等待吧～</p>
<h3 id="3-安装-Hexo"><a href="#3-安装-Hexo" class="headerlink" title="3. 安装 Hexo"></a>3. 安装 Hexo</h3><p>常用的个人博客网站框架有 Hexo 和 Jekyll。 这里我们使用的是 Hexo。 需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo 框架与以后你自己发布的网页都在这个文件夹中。(注意，这里的命令都是作用在创建的Blog文件夹中)</p>
<p>安装 Hexo 需要先安装下列应用程序：</p>
<ul>
<li><a href="https://nodejs.org/en/">Node.js</a> </li>
<li><a href="http://git-scm.com/">Git</a></li>
</ul>
<p>使用npm命令安装Hexo，输入:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli </span><br></pre></td></tr></table></figure>
<p>这个安装时间较长耐心等待，安装完成后，初始化我们的博客，输入:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init blog</span><br></pre></td></tr></table></figure>
<p>为了检测我们的网站雏形，分别按顺序输入以下三条命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new my_test</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。完成后，打开浏览器输入地址: localhost:4000 可以看出我们写出第一篇博客。 </p>
<h4 id="常用的hexo-命令"><a href="#常用的hexo-命令" class="headerlink" title="常用的hexo 命令"></a>常用的hexo 命令</h4><ul>
<li><p>npm install hexo -g #安装Hexo</p>
</li>
<li><p>npm update hexo -g #升级</p>
</li>
<li><p>hexo init #初始化博客</p>
</li>
<li><p>hexo n “我的博客” == hexo new “我的博客” #新建文章</p>
</li>
<li><p>hexo g == hexo generate #生成</p>
</li>
<li><p>hexo s == hexo server #启动服务预览</p>
</li>
<li><p>hexo d == hexo deploy #部署</p>
</li>
<li><p>hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</p>
</li>
<li><p>hexo server -p 5000 #更改端口</p>
</li>
<li><p>hexo server -i 192.168.1.1 #自定义 IP</p>
</li>
<li><p>hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</p>
</li>
</ul>
<h3 id="4-推送网站"><a href="#4-推送网站" class="headerlink" title="4. 推送网站"></a>4. 推送网站</h3><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。<br>在设置之前，需要解释一个概念:</p>
<ul>
<li>在blog根目录里的_config.yml文件称为站点配置文件。</li>
<li>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件。</li>
<li>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: (这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git)</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure>
保存站点配置文件。<br>其实就是给 hexo d 这个命令做相应的配置，让 hexo 知道你要把 blog 部署在哪个位置，很显然，我们部署在我们  GitHub 的仓库里。最后安装 Git 部署插件，输入命令：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
现在，我们输入三条命令：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>
其实第三条的 hexo d 就是部署网站命令。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="http://xxxx.github.io.你就会发现你的博客已经上线了,可以在网络上被访问了./">http://xxxx.github.io。你就会发现你的博客已经上线了，可以在网络上被访问了。</a></li>
</ul>
<h3 id="5-更换主题"><a href="#5-更换主题" class="headerlink" title="5. 更换主题"></a>5. 更换主题</h3><p>如果你不喜欢 Hexo 默认的主题，可以更换不同的主题，主题传送门：<a href="https://link.zhihu.com/?target=https://hexo.io/themes/">Themes</a><br>可以在 blog 目录中的 themes 文件夹中查看你自己主题是什么。现在把默认主题更改成 Next 主题，在 blog 目录中（就是命令行的位置处于 blog 目录）打开命令行输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<p>这是将 Next 主题下载到 blog 目录的 themes 主题下的 next 文件夹中。打开站点的 _config.yml 配置文件，修改主题为 next:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure>
<p>打开主题的 _config.yml 配置文件，不是站点主题文件，在这里面可以具体设置主题的格式。详情请查看<a href="https://www.jianshu.com/p/efbeddc5eb19">Hexo+Next个人博客主题优化</a></p>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
  </entry>
  <entry>
    <title>发生在逻辑回归之前的故事.md</title>
    <url>/2020/10/27/%E5%8F%91%E7%94%9F%E5%9C%A8%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E4%B9%8B%E5%89%8D%E7%9A%84%E6%95%85%E4%BA%8B/</url>
    <content><![CDATA[<h2 id="Gaussian-distribution-高斯分布"><a href="#Gaussian-distribution-高斯分布" class="headerlink" title="Gaussian distribution (高斯分布)"></a>Gaussian distribution (高斯分布)</h2><p>假设在一个平面直角坐标系上朝原点扔飞镖，投掷的结果会产生随机误差。我们假设对于误差只和距离有关，与方向无关。如图所示：<br><img src="/2020/10/27/%E5%8F%91%E7%94%9F%E5%9C%A8%E9%80%BB%E8%BE%91%E5%9B%9E%E5%BD%92%E4%B9%8B%E5%89%8D%E7%9A%84%E6%95%85%E4%BA%8B/%E6%89%93%E9%9D%B6%E5%9B%BE%E7%89%87.png" alt="image"><br>约定 P 是概率密度函数，落在 x 的概率为 P(x), 落在 y 的概率为 P(y)。则有落在 (x,y) 点的概率为 P(x)P(y). 该点距离原点距离为 r。 令 g(r) = P(x)P(y)。<br>由上可知：</p>
<ul>
<li>x = r cos(ø), y = r sin(ø)</li>
<li>g(r) 函数与 ø 无关。</li>
<li><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dp(x)dx=1"></li>
</ul>
<p><img src="http://latex.codecogs.com/svg.latex?g(r)=p(x)p(y)"></p>
<p>两边对 ø 求导：</p>
<p><img src="http://latex.codecogs.com/svg.latex?p(x)%7Bp(y)%7D%27rcos(%5Ctheta)+p(y)%7Bp(x)%7D%27(-rsin(%5Ctheta))=0"></p>
<p><img src="http://latex.codecogs.com/svg.latex?p(x)%7Bp(y)%7D%27x-p(y)%7Bp(x)%7D%27y=0"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cfrac%3C!--%EF%BF%BC0--%3E"></p>
<p>已知:</p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dp(x)dx=1"> </p>
<p>则必有 C 小于 0，上式改写为：</p>
<p><img src="http://latex.codecogs.com/svg.latex?p(x)=A*e%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D"> </p>
<p>其中 k&gt;0.</p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7DA*e%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=1"></p>
<p><img src="http://latex.codecogs.com/svg.latex?2*A*%5Cint_%7B0%7D%5E%7B%5Cinfty%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=1"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B0%7D%5E%7B%5Cinfty%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=%5Cfrac%7B1%7D%7B2A%7D"></p>
<p>令:</p>
<p><img src="http://latex.codecogs.com/svg.latex?t=%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%7D%7Dx"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Csqrt%7B%5Cfrac%7B2%7D%7Bk%7D%7D%5Cint_%7B0%7D%5E%7B%5Cinfty%7De%5E%7B-t%5E%7B2%7D%7Ddt=%5Cfrac%7B1%7D%7B2A%7D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Csqrt%7B%5Cfrac%7B2%7D%7Bk%7D%7D%5Cfrac%7B%5Csqrt%7B%5Cpi%7D%7D%7B2%7D=%5Cfrac%7B1%7D%7B2A%7D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?A=%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?p(x)=%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D"></p>
<p>由统计学定义，连续性概率密度函数：</p>
<ul>
<li><p><a href="https://baike.baidu.com/item/%E6%95%B0%E5%AD%A6%E6%9C%9F%E6%9C%9B/5362790?fromtitle=%E6%9C%9F%E6%9C%9B&fromid=10318906&fr=aladdin"><img src="http://latex.codecogs.com/svg.latex?%5Cmu=%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dx*p(x)dx"></a></p>
</li>
<li><p><a href="https://baike.baidu.com/item/%E6%96%B9%E5%B7%AE/3108412?fr=aladdin"><img src="http://latex.codecogs.com/svg.latex?%5Csigma%5E2=%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7D(x-%5Cmu)%5E2*p(x)dx"></a></p>
</li>
</ul>
<p>x*p(x) 为奇函数，故均值为0，即 µ 为 0 。则有：</p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dx%5E2*p(x)dx=%5Csigma%5E2"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dx%5E2*%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=%5Csigma%5E2"></p>
<p>利用分部积分法：</p>
<ul>
<li><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B%7D%5E%7B%7Du(x)v%27(x)dx=uv-%5Cint_%7B%7D%5E%7B%7Du%27(x)v(x)dx"></li>
</ul>
<p>根据上式，令：</p>
<ul>
<li><img src="http://latex.codecogs.com/svg.latex?u(x)=x"></li>
<li><img src="http://latex.codecogs.com/svg.latex?v%27(x)=xe%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D"></li>
<li><img src="http://latex.codecogs.com/svg.latex?v(x)=-%5Cfrac%7B1%7D%7Bk%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D"></li>
</ul>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B-%5Cinfty%7D%5E%7B%5Cinfty%7Dx%5E2*%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=2%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7D%5Cint_%7B0%7D%5E%7B%5Cinfty%7Dx*xe%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B0%7D%5E%7B%5Cinfty%7Dx*xe%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=(-%5Cfrac%7Bx%7D%7Bk%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D)%7C_%7B0%7D%5E%7B%5Cinfty%7D-%5Cint_%7B0%7D%5E%7B%5Cinfty%7D(-%5Cfrac%7B1%7D%7Bk%7D)e%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx"></p>
<p><img src="http://latex.codecogs.com/svg.latex?(-%5Cfrac%7Bx%7D%7Bk%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D)%7C_%7B0%7D%5E%7B%5Cinfty%7D=0"></p>
<p><img src="http://latex.codecogs.com/svg.latex?%5Cint_%7B0%7D%5E%7B%5Cinfty%7D(-%5Cfrac%7B1%7D%7Bk%7D)e%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=(-%5Cfrac%7B1%7D%7Bk%7D)%5Csqrt%7B%5Cfrac%7B2%7D%7Bk%7D%7D%5Cfrac%7B%5Csqrt%7B%5Cpi%7D%7D%7B2%7D"></p>
<p>故有：<br><img src="http://latex.codecogs.com/svg.latex?2%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7D%5Cint_%7B0%7D%5E%7B%5Cinfty%7Dx*xe%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7Ddx=2%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7D(%5Cfrac%7B1%7D%7Bk%7D)%5Csqrt%7B%5Cfrac%7B2%7D%7Bk%7D%7D%5Cfrac%7B%5Csqrt%7B%5Cpi%7D%7D%7B2%7D=%5Cfrac%7B1%7D%7Bk%7D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?k=%5Cfrac%7B1%7D%7B%5Csigma%5E%7B2%7D%7D"></p>
<p>最终得到：</p>
<p><img src="http://latex.codecogs.com/svg.latex?p(x)=%5Csqrt%7B%5Cfrac%7Bk%7D%7B2%5Cpi%7D%7De%5E%7B-%5Cfrac%7B1%7D%7B2%7Dkx%5E%7B2%7D%7D=%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%7D%5Csigma%7De%5E%7B-%5Cfrac%7B1%7D%7B2%5Csigma%5E%7B2%7D%7Dx%5E%7B2%7D%7D"></p>
<h2 id="Sigmod-函数的由来"><a href="#Sigmod-函数的由来" class="headerlink" title="Sigmod 函数的由来"></a>Sigmod 函数的由来</h2>]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Logistic</tag>
      </tags>
  </entry>
  <entry>
    <title>强化学习入门算法: QLearning &amp; Sarsa</title>
    <url>/2020/08/20/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%E7%AE%97%E6%B3%95-QLearning-Sarsa/</url>
    <content><![CDATA[<h2 id="QLearning-off-policy"><a href="#QLearning-off-policy" class="headerlink" title="QLearning (off-policy)"></a>QLearning (off-policy)</h2><h3 id="整体学习流程："><a href="#整体学习流程：" class="headerlink" title="整体学习流程："></a>整体学习流程：</h3><p>一次循环</p>
<ul>
<li><p>初始化环境</p>
</li>
<li><p>当前回合 （循环，直到当前回合结束）</p>
<ul>
<li><p>根据当前 S， 选择动作 a。(动作选择规则：1.随机选择。2.根据当前 S 最大的 a选择。)</p>
</li>
<li><p>在环境中采取行为 a, 获得下一个 S_ 和 R, 以及是否终止。</p>
</li>
<li><p>更新 Q Table:</p>
<p><img src="http://latex.codecogs.com/svg.latex?q_%7B%5C_predict%7D=Q%5Bs,a%5D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?q_%7B%5C_target%7D=R+%5Cgamma*Q%5Bs%5C_,:%5D_%7Bmax%7D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?Q(s,a)%5E%7Bnew%7D=Q(s,a)+%5Calpha*(q_%7B%5C_target%7D-q_%7B_predict%7D)"></p>
<p><img src="http://latex.codecogs.com/svg.latex?Q(s,a)%5E%7Bnew%7D=Q(s,a)+%5Calpha*(R+%5Cgamma*Q%5Bs%5C_,:%5D_%7Bmax%7D-Q%5Bs,a%5D)"></p>
<p>其中 alpha 代表学习率，来决定这次的误差有多少是要被学习的。gamma 代表对未来奖励的衰减值，来决定这次获得奖励的大小。</p>
</li>
<li><p>将 S_ 赋给 S, 继续当前循环。</p>
</li>
<li><p>判断当前回合是否结束。</p>
</li>
</ul>
</li>
</ul>
<h2 id="Sarsa-on-policy"><a href="#Sarsa-on-policy" class="headerlink" title="Sarsa (on-policy)"></a>Sarsa (on-policy)</h2><h3 id="整体学习流程：-1"><a href="#整体学习流程：-1" class="headerlink" title="整体学习流程："></a>整体学习流程：</h3><p>一次循环</p>
<ul>
<li><p>初始化环境</p>
</li>
<li><p>根据当前 S， 选择动作 a。(动作选择规则：1.随机选择。2.根据当前 S 最大的 a选择。)</p>
</li>
<li><p>当前回合 （循环，直到当前回合结束）</p>
<ul>
<li><p>在环境中采取行为 a, 获得下一个 S_ 和 R, 以及是否终止。</p>
</li>
<li><p>根据下一个 S_, 选择动作 a_。(动作选择规则同上)</p>
</li>
<li><p>更新 Q Table:</p>
<p><img src="http://latex.codecogs.com/svg.latex?q_%7B%5C_predict%7D=Q%5Bs,a%5D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?q_%7B%5C_target%7D=R+%5Cgamma*Q%5Bs%5C_,a%5C_%5D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?Q(s,a)%5E%7Bnew%7D=Q(s,a)+%5Calpha*(q_%7B%5C_target%7D-q_%7B_predict%7D)"></p>
<p><img src="http://latex.codecogs.com/svg.latex?Q(s,a)%5E%7Bnew%7D=Q(s,a)+%5Calpha*(R+%5Cgamma*Q%5Bs%5C_,a%5C_%5D-Q%5Bs,a%5D)"></p>
<p>其中 alpha 代表学习率，来决定这次的误差有多少是要被学习的。gamma 代表对未来奖励的衰减值，来决定这次获得奖励的大小。</p>
</li>
<li><p>将 S_ 赋给 S, a_ 赋给 a, 继续当前循环。</p>
</li>
<li><p>判断当前回合是否结束。</p>
</li>
</ul>
</li>
</ul>
<h3 id="与-QLearning-的区别："><a href="#与-QLearning-的区别：" class="headerlink" title="与 QLearning 的区别："></a>与 QLearning 的区别：</h3><ul>
<li>Sarsa 是说到做到型, 也叫 on-policy, 在线学习, 学着自己在做的事情. 而 QLearning 是说到但并不一定做到, 所以它也叫作 Off-policy, 离线学习. 而因为有了 maxQ, Q-learning 也是一个特别勇敢的算法. Q learning 机器人 永远都会选择最近的一条通往成功的道路, 不管这条路会有多危险. 而 Sarsa 则是相当保守, 他会选择离危险远远的, 完成任务是次要的, 保住自己的小命才是第一位. 这就是使用 Sarsa 方法的不同之处.</li>
<li>Sarsa 在当前 state 已经想好了 state 对应的 action, 而且想好了下一个 state_ 和下一个 action_ (Qlearning 还没有想好下一个 action_)。更新 Q(s,a) 的时候基于的是下一个 Q(s_, a_)(Qlearning 是基于 maxQ(s_))。</li>
<li>Sarsa 相对于 Qlearning, 更加的胆小. 因为 Qlearning 永远都是想着 maxQ 最大化, 因为这个 maxQ 而变得贪婪, 不考虑其他非 maxQ 的结果. 我们可以理解成 Qlearning 是一种贪婪, 大胆, 勇敢的算法, 对于错误, 死亡并不在乎. 而 Sarsa 是一种保守的算法, 他在乎每一步决策, 对于错误和死亡比较铭感. 这一点我们会在可视化的部分看出他们的不同. 两种算法都有他们的好处, 比如在实际中, 你比较在乎机器的损害, 用一种保守的算法, 在训练时就能减少损坏的次数.</li>
</ul>
<h2 id="Sarsa-lambda-on-policy"><a href="#Sarsa-lambda-on-policy" class="headerlink" title="Sarsa-lambda (on-policy)"></a>Sarsa-lambda (on-policy)</h2><h3 id="整体学习流程：-2"><a href="#整体学习流程：-2" class="headerlink" title="整体学习流程："></a>整体学习流程：</h3><p>一次循环</p>
<ul>
<li><p>初始化环境</p>
</li>
<li><p>根据当前 S， 选择动作 a。(动作选择规则：1.随机选择。2.根据当前 S 最大的 a选择。)</p>
</li>
<li><p>初始化 eligibility_trace(动作跟踪)</p>
</li>
<li><p>当前回合 （循环，直到当前回合结束）</p>
<ul>
<li><p>在环境中采取行为 a, 获得下一个 S_ 和 R, 以及是否终止。</p>
</li>
<li><p>根据下一个 S_, 选择动作 a_。(动作选择规则同上)</p>
</li>
<li><p>更新 Q Table:</p>
<p>对于经历过的 (s, a) state-action, 我们让他+1, 证明他是得到 reward 路途中不可或缺的一环。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Method 1:</span><br><span class="line">eligibility_trace.loc[s, a] +&#x3D; 1</span><br><span class="line"># Method 2:</span><br><span class="line">eligibility_trace.loc[s, :] *&#x3D; 0</span><br><span class="line">eligibility_trace.loc[s, a] &#x3D; 1</span><br></pre></td></tr></table></figure>

<p><img src="http://latex.codecogs.com/svg.latex?q_%7B%5C_predict%7D=Q%5Bs,a%5D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?q_%7B%5C_target%7D=R+%5Cgamma*Q%5Bs%5C_,a%5C_%5D"></p>
<p><img src="http://latex.codecogs.com/svg.latex?Q_%7Btable%7D%5E%7Bnew%7D=Q_%7Btable%7D+%5Calpha*(q_%7B%5C_target%7D-q_%7B_predict%7D)*eligibility%5C_trace"></p>
<p><img src="http://latex.codecogs.com/svg.latex?Q_%7Btable%7D%5E%7Bnew%7D=Q_%7Btable%7D+%5Calpha*(R+%5Cgamma*Q%5Bs%5C_,a%5C_%5D-Q%5Bs,a%5D)*eligibility%5C_trace"></p>
<p>eligibility_trace 的值随着时间衰减, 离获取 reward 越远的步, 他的”不可或缺性”越小。</p>
<p>eligibility_trace = eligibility_trace * gamma * lambda</p>
<p>其中 alpha 代表学习率，来决定这次的误差有多少是要被学习的。gamma 代表对未来奖励的衰减值，来决定这次获得奖励的大小。lambda 代表的脚步衰减值，0 为单步更新，1 为回合更新。</p>
</li>
<li><p>将 S_ 赋给 S, a_ 赋给 a, 继续当前循环。</p>
</li>
<li><p>判断当前回合是否结束。</p>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>强化学习</category>
      </categories>
      <tags>
        <tag>QLearning</tag>
        <tag>Sarsa</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习的问题处理</title>
    <url>/2020/11/09/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9A%84%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>tutorials</tag>
      </tags>
  </entry>
  <entry>
    <title>深度强化学习-DQN</title>
    <url>/2020/08/24/%E6%B7%B1%E5%BA%A6%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BDQN/</url>
    <content><![CDATA[<h2 id="Deep-Q-Network"><a href="#Deep-Q-Network" class="headerlink" title="Deep Q Network"></a>Deep Q Network</h2><h3 id="整体学习流程"><a href="#整体学习流程" class="headerlink" title="整体学习流程"></a>整体学习流程</h3><p>一次循环</p>
<ul>
<li>初始化环境</li>
<li>当前回合 （循环，直到当前回合结束）<ul>
<li>刷新环境</li>
<li>根据当前 S， 选择动作 a.(动作选择规则：1.随机选择.2.根据当前 S 在 eval_net 中最大的 a 选择.)</li>
<li>在环境中采取行为 a, 获得下一个 S_ 和 R, 以及是否终止.</li>
<li>DQN 存储记忆.(总 memory 大小是固定的, 如果超出总大小, 旧 memory 就被新 memory 替换)</li>
<li>判断当前是否需要学习 (先累积一些记忆再开始学习):<ul>
<li>DQN学习:<ul>
<li>检查是否需要替换 target_net 参数.</li>
<li>从 memory 中随机抽取 batch_size 记忆</li>
<li>获取 q_next(target_net 产生的 q)和 q_eval(eval_net 产生的 q). </li>
<li>q_next, q_eval 包含所有 action 的值, 而我们需要的只是已经选择好的 action 的值, 其他的并不需要. 所以我们将其他的 action 值全变成 0, 将用到的 action 误差值 反向传递回去, 作为更新依据. </li>
<li>q_target = reward + gamma * max(q_next) (reward 来自于当前批次的 batch_memory)</li>
<li>根据误差((q_target-q_eval)^2), 训练 eval_net, 得到误差 cost.</li>
<li>逐渐增加 epsilon, 降低行为的随机性.</li>
</ul>
</li>
</ul>
</li>
<li>将 S_ 赋给 S, 继续当前循环.</li>
<li>判断当前回合是否结束.</li>
</ul>
</li>
</ul>
<h3 id="loss-function-的构造"><a href="#loss-function-的构造" class="headerlink" title="loss function 的构造"></a>loss function 的构造</h3><p><img src="/2020/08/24/%E6%B7%B1%E5%BA%A6%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E4%B9%8BDQN/dqn_loss_function.png" alt="image"></p>
]]></content>
      <categories>
        <category>强化学习</category>
      </categories>
      <tags>
        <tag>DQN</tag>
      </tags>
  </entry>
  <entry>
    <title>编写自己的python包上传到pypi</title>
    <url>/2020/11/20/%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84python%E5%8C%85%E4%B8%8A%E4%BC%A0%E5%88%B0pypi/</url>
    <content><![CDATA[<h3 id="1-创建包文件"><a href="#1-创建包文件" class="headerlink" title="1. 创建包文件"></a>1. 创建包文件</h3><p>您现在将创建一些文件来打包此项目并准备分发。创建下面列出的新文件 - 您将在以下步骤中向其添加内容。(以 wdhtools 为例)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;wdhtools</span><br><span class="line">    &#x2F;wdhtools</span><br><span class="line">        __init__.py</span><br><span class="line">    LICENSE</span><br><span class="line">    REAEME.md</span><br><span class="line">    setup.py</span><br></pre></td></tr></table></figure>
<h3 id="2-创建-setup-py"><a href="#2-创建-setup-py" class="headerlink" title="2. 创建 setup.py"></a>2. 创建 setup.py</h3><p>setup.py 是 setuptools 的构建脚本。它告诉 setuptools 你的包（例如名称和版本）以及要包含的代码文件。</p>
<ul>
<li>打开 setup.py 并输入以下内容。您应该更新软件包名称以包含你的用户名。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from __future__ import print_function</span><br><span class="line">from setuptools import setup, find_packages</span><br><span class="line"></span><br><span class="line">setup(</span><br><span class="line">    name&#x3D;&#39;wdhtools&#39;,</span><br><span class="line">    version&#x3D;&#39;1.2.0&#39;,</span><br><span class="line">    author&#x3D;&#39;wdh&#39;,</span><br><span class="line">    packages&#x3D;find_packages(),</span><br><span class="line">    install_requires&#x3D;[&#39;pandas&#39;, &#39;sklearn&#39;, &#39;xgboost&#39;, &#39;matplotlib&#39;, &#39;seaborn&#39;, &#39;featexp&#39;]</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="3-创建-REAEME-md"><a href="#3-创建-REAEME-md" class="headerlink" title="3. 创建 REAEME.md"></a>3. 创建 REAEME.md</h3><p>打开 README.md 并输入内容。可以自定义此项，放入一些对项目的介绍。此处不作介绍。</p>
<h3 id="4-创建许可证"><a href="#4-创建许可证" class="headerlink" title="4. 创建许可证"></a>4. 创建许可证</h3><p>上传到 Python Package Index 的每个包都包含许可证，这一点很重要。这告诉用户安装你的软件包可以使用您的软件包的条款。有关选择许可证的帮助，请访问 <a href="https://choosealicense.com/%E3%80%82%E9%80%89%E6%8B%A9%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%90%8E%EF%BC%8C%E6%89%93%E5%BC%80">https://choosealicense.com/。选择许可证后，打开</a> LICENSE 并输入许可证文本 。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Copyright (c) 2020 The Python Packaging Authority</span><br><span class="line"></span><br><span class="line">Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and&#x2F;or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</span><br><span class="line"></span><br><span class="line">The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</span><br><span class="line"></span><br><span class="line">THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span><br></pre></td></tr></table></figure>

<h3 id="5-生成分发包"><a href="#5-生成分发包" class="headerlink" title="5. 生成分发包"></a>5. 生成分发包</h3><ul>
<li>确保您拥有 setuptools 并 wheel 安装了最新版本：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python -m pip install --user --upgrade setuptools wheel</span><br></pre></td></tr></table></figure></li>
<li>现在从 setup.py 位于的同一目录运行此命令：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python3 setup.py sdist bdist_wheel</span><br></pre></td></tr></table></figure>
此命令应输出大量文本，一旦完成，应在 dist 目录中生成两个文件：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dist&#x2F;</span><br><span class="line">  example_pkg_your_username-0.0.1-py3-none-any.whl</span><br><span class="line">  example_pkg_your_username-0.0.1.tar.gz</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="6-上传-PYPI"><a href="#6-上传-PYPI" class="headerlink" title="6. 上传 PYPI"></a>6. 上传 PYPI</h3><p>最后，是时候将你的包上传到 Python Package Index了！</p>
<p>首先要做的一件事是在 PyPI 上注册一个帐户。<a href="https://pypi.org/%E3%80%82">https://pypi.org/。</a> 记住账号密码，接下来会用到。</p>
<ul>
<li>在该项目命令行下输入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">twine upload dist&#x2F;*</span><br></pre></td></tr></table></figure>
然后根据提示输入上面创建的账号密码，上传完成后，可以在 PYPI 上查看。</li>
</ul>
<h3 id="7-安装你的包"><a href="#7-安装你的包" class="headerlink" title="7. 安装你的包"></a>7. 安装你的包</h3><p>通过上面的步骤之后，现在你可以在任意的地方安装你的包了，就像安装其他的包一样。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install wdhtools</span><br><span class="line">import wdhtools</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>tutorials</tag>
        <tag>pypi</tag>
      </tags>
  </entry>
</search>
